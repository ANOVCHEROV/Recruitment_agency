@model RecuirementAgency.Models.Dao_Summ.VO_Summ

@{
    ViewBag.Title = "Create_Summary";
}

<h2>Create_Summary</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>VO_Summ</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idOfAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idOfAuthor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idOfAuthor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.info, "", new { @class = "text-danger" })
            </div>
        </div>

        
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.professions, htmlAttributes: new { @class = "control-label col-md-2" })
        <table class="table" id="tab1">
            @if (Model.professions != null)
            {
            foreach (var item in Model.professions)
                {
                <tr>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => item, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>
            }
            }
        </table>
    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.professions, htmlAttributes: new { @class = "control-label col-md-2" })
            <table class="table">
                <tr>
                    <td>
                        Профессия
                    </td>
                    <td>
                        Число отработанных месяцев
                    </td>
                </tr>
                @if (Model.experience != null)
                {
                foreach (var item in Model.experience)
                {
                    <tr>
                        <td>
                            <div class="col-md-10">
                                @Html.EditorFor(model => item.profession, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => item.profession, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td>
                            <div class="col-md-10">
                                @Html.EditorFor(model => item.countOfMonths, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => item.countOfMonths, "", new { @class = "text-danger" })
                            </div>
                        </td>
                    </tr>
                }
                }
            </table>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
